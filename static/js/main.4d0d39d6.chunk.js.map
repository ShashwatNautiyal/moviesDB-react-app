{"version":3,"sources":["requests.js","components/Row.js","components/Banner.js","components/Nav.js","App.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchMovieDetails","fetchMovieId","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","movieOverview","setMovieOverview","movieDesc","setMovieDesc","youtubeId","setYoutubeId","baseUrl","baseImgUrl","console","log","useEffect","fetch","then","Response","json","data","results","className","map","movie","onClick","e","url","replace","id","trailerUrl","target","parentElement","classList","add","showMovieOverview","src","poster_path","backdrop_path","alt","remove","enableScroll","vote_average","genres","genre","index","length","name","spoken_languages","language","english_name","runtime","status","release_date","production_countries","href","homepage","overview","videoId","key","opts","playerVars","autoplay","Banner","Math","floor","random","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","Nav","handleShow","setHandleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d0d39d6.chunk.js","sourcesContent":["const API_KEY = '8b1cdff433c214d60aa25728d0445fe1';\r\n\r\nconst requests = {\r\n\tfetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n\tfetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n\tfetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n\tfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n\tfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n\tfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n\tfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n\tfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n\tfetchMovieDetails: `/movie/ID?api_key=${API_KEY}&language=en-US`,\r\n\tfetchMovieId: `/movie/ID/videos?api_key=${API_KEY}&language=en-US`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Row.css';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport requests from '../requests';\r\nimport YouTube from 'react-youtube';\r\n\r\nconst Row = ({ title, fetchUrl, isLargeRow }) => {\r\n\tconst [movies, setMovies] = useState([]);\r\n\tconst [movieOverview, setMovieOverview] = useState(false);\r\n\tconst [movieDesc, setMovieDesc] = useState();\r\n\tconst [youtubeId, setYoutubeId] = useState([]);\r\n\r\n\tconst baseUrl = 'https://api.themoviedb.org/3';\r\n\tconst baseImgUrl = 'https://image.tmdb.org/t/p/original';\r\n\r\n\tconsole.log(movieDesc);\r\n\tconsole.log(youtubeId);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`${baseUrl}${fetchUrl}`)\r\n\t\t\t.then((Response) => Response.json())\r\n\t\t\t.then((data) => setMovies(data.results));\r\n\t}, [fetchUrl]);\r\n\r\n\tconst showMovieOverview = (movie, e) => {\r\n\t\tlet url = requests.fetchMovieDetails.replace('ID', movie.id);\r\n\t\tlet trailerUrl = requests.fetchMovieId.replace('ID', movie.id);\r\n\t\tconsole.log(`${baseUrl}${url}`, movie.id);\r\n\t\tfetch(`${baseUrl}${url}`)\r\n\t\t\t.then((Response) => Response.json())\r\n\t\t\t.then((data) => setMovieDesc(data));\r\n\t\tfetch(`${baseUrl}${trailerUrl}`)\r\n\t\t\t.then((Response) => Response.json())\r\n\t\t\t.then((data) => setYoutubeId(data.results));\r\n\t\te.target.parentElement.parentElement.parentElement.classList.add('disableScroll');\r\n\t\tsetMovieOverview(true);\r\n\t};\r\n\r\n\tconst enableScroll = (e) => {\r\n\t\tconsole.log(\r\n\t\t\te.target.parentElement.parentElement.parentElement.parentElement.parentElement\r\n\t\t\t\t.parentElement\r\n\t\t);\r\n\t\te.target.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.classList.remove(\r\n\t\t\t'disableScroll'\r\n\t\t);\r\n\t};\r\n\r\n\tconst opts = {\r\n\t\tplayerVars: {\r\n\t\t\tautoplay: 0,\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<h2 className=\"row__heading\">{title}</h2>\r\n\t\t\t<div className=\"row__posters\">\r\n\t\t\t\t{movies.map((movie) => (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\t\tonClick={(e) => showMovieOverview(movie, e)}\r\n\t\t\t\t\t\tclassName={isLargeRow ? 'row__largeImg' : 'row__smallImg'}\r\n\t\t\t\t\t\tsrc={`${baseImgUrl}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n\t\t\t\t\t\talt={movie.title}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t<div className={`overview--fadeOut ${movieOverview && 'row__movieOverview'} `}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h1>{movieDesc?.title}</h1>\r\n\t\t\t\t\t\t<div className=\"row__clearIcon\">\r\n\t\t\t\t\t\t\t<ClearIcon\r\n\t\t\t\t\t\t\t\tclassName=\"clearIcon\"\r\n\t\t\t\t\t\t\t\tonClick={(e) => (\r\n\t\t\t\t\t\t\t\t\tsetMovieOverview(false), enableScroll(e), setYoutubeId('')\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"overview__poster\">\r\n\t\t\t\t\t\t\t<img src={`${baseImgUrl}${movieDesc?.poster_path}`} alt=\"\" />\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<strong>Rating:</strong> {movieDesc?.vote_average}/10\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<strong>Genres:</strong>{' '}\r\n\t\t\t\t\t\t\t\t\t{movieDesc &&\r\n\t\t\t\t\t\t\t\t\t\tmovieDesc?.genres.map((genre, index) =>\r\n\t\t\t\t\t\t\t\t\t\t\tmovieDesc?.genres.length - 1 !== index\r\n\t\t\t\t\t\t\t\t\t\t\t\t? `${genre.name}, `\r\n\t\t\t\t\t\t\t\t\t\t\t\t: `${genre.name}.`\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<strong>Languages:</strong>{' '}\r\n\t\t\t\t\t\t\t\t\t{movieDesc?.spoken_languages.map((language, index) =>\r\n\t\t\t\t\t\t\t\t\t\tmovieDesc?.spoken_languages.length - 1 !== index\r\n\t\t\t\t\t\t\t\t\t\t\t? `${language.english_name}, `\r\n\t\t\t\t\t\t\t\t\t\t\t: `${language.english_name}.`\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<strong>Runtime:</strong> {movieDesc?.runtime}\r\n\t\t\t\t\t\t\t\t\t{'m'}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<strong>Status:</strong> {movieDesc?.status}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<strong>Release date:</strong> {movieDesc?.release_date}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<strong>County:</strong> {movieDesc?.production_countries[0]?.name}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<strong>Watch Now:</strong>{' '}\r\n\t\t\t\t\t\t\t\t\t<a href={movieDesc?.homepage} target=\"_blank\">\r\n\t\t\t\t\t\t\t\t\t\t{movieDesc?.title}\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"youtube\">\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Description</strong>: {movieDesc?.overview}\r\n\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<strong>Trailer:</strong>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<YouTube\r\n\t\t\t\t\t\t\t\t\tvideoId={youtubeId[0]?.key} // defaults -> null\r\n\t\t\t\t\t\t\t\t\tclassName=\"youtube__video\" // defaults -> null\r\n\t\t\t\t\t\t\t\t\topts={opts} // defaults -> {}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Row;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Banner.css';\r\n\r\nconst Banner = ({ fetchUrl }) => {\r\n\tconst [movies, setMovies] = useState([]);\r\n\tconst baseUrl = 'https://api.themoviedb.org/3';\r\n\tconst baseImgUrl = 'https://image.tmdb.org/t/p/original';\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`${baseUrl}${fetchUrl}`)\r\n\t\t\t.then((Response) => Response.json())\r\n\t\t\t.then((data) =>\r\n\t\t\t\tsetMovies(data.results[Math.floor(Math.random() * data.results.length - 1)])\r\n\t\t\t);\r\n\t}, [fetchUrl]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<header\r\n\t\t\t\tclassName=\"header\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundImage: `url(${baseImgUrl}${movies?.backdrop_path})`,\r\n\t\t\t\t\tbackgroundPosition: 'top',\r\n\t\t\t\t\tbackgroundSize: 'cover\t',\r\n\t\t\t\t\tbackgroundRepeat: 'no-repeat',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"header__content\">\r\n\t\t\t\t\t<h1 className=\"header__heading\">{movies?.name}</h1>\r\n\t\t\t\t\t<div className=\"header__buttons\">\r\n\t\t\t\t\t\t<button className=\"header__button\">Play</button>\r\n\t\t\t\t\t\t<button className=\"header__button\">My List</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"header__overview\">{movies?.overview}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"header--gradient\" />\r\n\t\t\t</header>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Nav.css';\r\n\r\nconst Nav = () => {\r\n\tconst [handleShow, setHandleShow] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('scroll', () => {\r\n\t\t\tif (window.scrollY > 100) {\r\n\t\t\t\tsetHandleShow(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetHandleShow(false);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('scroll');\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className={`nav ${handleShow && 'nav__black'}`}>\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"nav__logo\"\r\n\t\t\t\tsrc=\"https://www.freepnglogos.com/uploads/netflix-logo-text-emblem-31.png\"\r\n\t\t\t\talt=\"\"\r\n\t\t\t/>\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"nav__avatar\"\r\n\t\t\t\tsrc=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n\t\t\t\talt=\"\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Nav;\r\n","import './App.css';\nimport Row from './components/Row';\nimport requests from './requests';\nimport Banner from './components/Banner';\nimport Nav from './components/Nav';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Nav />\n\t\t\t<Banner fetchUrl={requests.fetchNetflixOriginals} />\n\n\t\t\t<Row title=\"NETFLIX ORIGNALS\" isLargeRow fetchUrl={requests.fetchActionMovies} />\n\t\t\t<Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n\t\t\t<Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n\t\t\t<Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n\t\t\t<Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n\t\t\t<Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n\t\t\t<Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}